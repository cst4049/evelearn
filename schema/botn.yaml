#官僚树结构
BurTreeNode: &BurTreeNode
  lyroCode:
    type: number   #外层编码
  LyriCode:
    type: number   #内层编码
  koLyro:
    type: string   #外层类型
  koLyri:
    type: string   #内层类型
  plyDad:
    type: string   #物理层父亲
  dadInner:
    type: string   #innerDadleast
  leastDadernInner:
    type: string   #dad+ 内层尽量靠近节点
  mostDadernInner:
    type: string   #dad+ 内层尽量远离
  mostDadwardInner:
    type: string   #dad* 内层尽量远离
  mostDadernInnerSuper:
    type: string   #dad+ 内层是super
  mostDadwardInnerSuper:
    type: string   #dad* 内层是super
  dadernInnerJust:
    type: string   #dad+ 内层是just
  dadOuter:
    type: string   #outerDadlest
  mostDadernOuter:
    type: string   #dad+ 跨外层 内层尽量远离
  leastDadernOuter:
    type: string   #dad+ 跨外层 内层尽量靠近
  dadernOuterJust:
    type: string   #dad+ 跨外层 内层just
  dadwardOuterJust:
    type: string   #dad* 跨外层 内层尽量靠近
  sonInner:
    type: string   #innersonleast
  leastSonernInner:
    type: string   #son+ 不跨外层 尽量靠近
  mostSonernInner:
    type: string   #son+ 不跨外层 尽量远离
  mostSonwardInner:
    type: string   #son* 不跨外层 尽量远离
  sonernJust:
    type: string   #son+ 跨外层 内层是just
  sonernSub:
    type: string   #son+ 跨外层 内层是sub
  sonOuter:
    type: string   #outersonleast
  leastSonernOuter:
    type: string   #son+ 跨外层 内层尽量靠近
  sonernCxLyroJust:
    type: string   #son+ 跨外层 内层是just
  mostSonernCrsLyro:
    type: string   #???
  mostDadernXxx:
    type: string   #dad+ 外层是xxx 内层尽量远离
  dadernLyroXxxJust:
    type: string   #dad+ 外层是XXX 内层是just
  dadwardLyroXxxJust:
    type: string   #dad* 外层是xxx 内层是just
  mostDadwardLyroXxx:
    type: string   #dad+ 外层是xxx 内层尽量远离
  leastSonernLyroXxx:
    type: string   #dad+ 外层是xxx 内层尽量靠近
  sonernSmLyroJust:
    type: string   #son+ 外层是xxx 内层是just
  sonwardXxLyroJust:
    type: string   #son+ 外层是xxx 内层尽量靠近
  mostSonwardXxLyro:
    type: string   #son+ 外层xxx 内层尽量远离

BotN:
  <<: *BurTreeNode